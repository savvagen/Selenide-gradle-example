apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'ru.d10xa.allure'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
group 'com.Fabrika'
version '1.0-SNAPSHOT'


defaultTasks 'clean', 'test'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    maven{url "http://dl.bintray.com/epam/reportportal"}
}

configurations {
    agent
}


sourceSets {
    main {
        java {srcDir 'main'}
        resources {srcDir 'main'}
    }
    test {
        java {srcDir 'test'}
        resources {srcDir 'test'}
    }
}



/******** DEPENDENCES *******/

dependencies {
    agent "org.aspectj:aspectjweaver:${aspectjVersion}"
    testCompile "ru.yandex.qatools.allure:allure-testng-adaptor:${allureVersion}"
    compile 'org.testng:testng:6.1.1'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.3.1'
    //compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.22'
    compile group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.22'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    compile group: 'com.codeborne', name: 'selenide', version: '4.4.3'
    compile group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'
    testCompile 'io.rest-assured:json-schema-validator:3.0.3'
    compile 'io.rest-assured:xml-path:3.0.3'
    compile 'io.rest-assured:json-path:3.0.3'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.10.2'
    //compile group: 'xml-apis', name: 'xml-apis', version: '2.0.2'
    compile group: 'org.json', name: 'json', version: '20160810'
    compile group: 'com.automation-remarks', name: 'video-recorder-testng', version: '1.4'
    //Logging with log4j2
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'
    //Logging with log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    //Test Containers
    compile group: 'org.testcontainers', name: 'selenium', version: '1.2.1'
    //Report portal
    compile 'com.epam.reportportal:agent-java-testng:3.0.3'
    compile 'com.epam.reportportal:logger-java-log4j:3.0.1'
    compile 'com.epam.reportportal:logger-java-logback:3.0.0'




}




/******** BUILD **********/

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "ru.d10xa:gradle-allure-plugin:0.5.5"
    }
}


allure {
    aspectjweaver = true

    // Choose your test framework.
    junit = false
    testNG = true
    spock = false
    // Choose if you're using Geb for web tests
    geb = false

    allureResultsDir = "$buildDir/allure-results"
    allureReportDir = "$buildDir/allure-report"

    allureVersion = "1.5.2"
    aspectjVersion = "1.8.0"
    /*allureSpockGebExtensionVersion = "0.2.1"
    allureJunitAspectjAdaptorVersion = "0.1.1"*/

    clean = true
}


/***** TESTS ****/

test.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}


test {
    systemProperty "file.encoding", "utf-8"
    useTestNG() {
        suiteXmlFiles << new File("src/test/resources/", "suite.xml")
        /*systemProperties = [
                browser: System.getProperty('browser', 'firefox'),
        ]*/
    }
    //useJUnit()
}




/***** TASKS*****/

tasks.withType(Test)*.finalizedBy allureReport


/*task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
    jarFile = './gradle/wrapper/gradle-wrapper.jar'
    scriptFile = './gradle'
}*/


/*task generateAllureReport(type: Exec) {
    commandLine "allure generate build/allure-results -v ${allureVersion} -o build/reports/allure"
}
test.finalizedBy(generateAllureReport)

task openAllureReport(type: Exec) {
    commandLine "allure report open -o build/reports/allure"
}

//Второй пример таски на генерацию репорта
task generateAllureReport(type: Exec) {
        commandLine "allure", "generate build/allure-results"
}
test.finalizedBy(generateAllureReport)
*/

